# Generated by Django 3.2.14 on 2024-10-27 20:36

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Configuracao',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='alterado em')),
                ('descricao', models.CharField(default='Configuração padrão', error_messages={'unique': 'Já existe uma configuração cadastrada com esta descrição!'}, max_length=100, null=True, unique=True, verbose_name='Descrição')),
                ('ignora_regras_admins', models.BooleanField(default=False, help_text='Ignora as restrições(bloqueios) de intervalos de horários definidos em cada espaço para super usuários', verbose_name='Ignora restrição de horários')),
                ('ignora_choques_admins', models.BooleanField(default=False, help_text='Ignora choques de horários para super usuários definido no espaço de reserva', verbose_name='Ignora choques de horários')),
                ('ignora_duracao_admins', models.BooleanField(default=False, help_text='Ignora duração de uma reserva, para super usuários, definida no espaço para duração máxima e mínima', verbose_name='Ignora duração da reserva')),
                ('ignora_min_criacao_admins', models.BooleanField(default=False, help_text='Ignora o prazo mínimo para o registro de uma reserva, quando realizado por um super usuário', verbose_name='Ignora carência mínima')),
                ('ignora_limite_abertura_admins', models.BooleanField(default=False, help_text='Ignora parâmetros de limite de abertura de reserva para super usuários', verbose_name='Ignora limite de abertura por usuário')),
                ('ignora_params_espaco_admins', models.BooleanField(default=False, help_text='Ignora parâmetros de espaço, para super usuários, definidos para criação de reservas ao sábados e domingos', verbose_name='Ignora parâmetros de espaço')),
                ('dias_retroativos', models.PositiveIntegerField(default=0, help_text='Dias retroativos para exibição das reservas anteriores ao dia atual, no calendário.', null=True, verbose_name='Dias retroativos')),
                ('sistema_liberado', models.BooleanField(default=False, help_text='Habilita o sistema e permite o registro de novas reservas', verbose_name='Sistema ativo')),
            ],
            options={
                'verbose_name': 'Configuração',
                'verbose_name_plural': 'Configurações',
            },
        ),
        migrations.CreateModel(
            name='Espaco',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='alterado em')),
                ('descricao', models.CharField(error_messages={'unique': 'Já existe um Espaço cadastrada com este nome!'}, max_length=250, null=True, unique=True, verbose_name='Descrição')),
                ('color', models.CharField(blank=True, default='#a7abeb', max_length=20, null=True, verbose_name='Cor')),
                ('max_duracao', models.IntegerField(default=240, help_text='Duração máxima de um evento (horas)', null=True, verbose_name='Duração máxima (minutos)')),
                ('min_duracao', models.IntegerField(default=30, help_text='Duração mínima de um evento (horas)', null=True, verbose_name='Duração mínima (minutos)')),
                ('min_criacao', models.IntegerField(default=24, help_text='Prazo mínimo para registrar uma agenda (horas)', null=True, verbose_name='Carência de abertura (horas)')),
                ('permite_criar_sabados', models.BooleanField(blank=True, default=False, verbose_name='Permitir registrar eventos aos Sábados')),
                ('permite_reservar_sabado', models.BooleanField(blank=True, default=False, verbose_name='Permite reservar para dia de Sábado')),
                ('considera_sabado_util', models.BooleanField(blank=True, default=False, help_text='Considera o Sábado como sendo um dia útil para o cálculo de carência mínima para abertura de reserva. O período de carência incluirá apenas os dias úteis.', verbose_name='Considera Sábado um dia útil')),
                ('permite_criar_domingos', models.BooleanField(blank=True, default=False, verbose_name='Permitir registrar eventos aos Domingos')),
                ('permite_reservar_domingo', models.BooleanField(blank=True, default=False, verbose_name='Permitir reservar para dia de Domingo')),
                ('ativo', models.BooleanField(blank=True, default=False, verbose_name='Espaço ativo')),
                ('instrucoes_espaco', models.TextField(blank=True, max_length=5000, null=True, verbose_name='Orientações do espaço')),
                ('requer_aprovacao', models.BooleanField(default=True, help_text='Eventos ficam pendentes até a aprovação', verbose_name='Requer aprovação')),
                ('limitar_abertura', models.BooleanField(default=False, help_text='Define se haverá limitação de abertura de reservas por um mesmo usuário. Requer campo QUANTIDADE LIMITE DE ABERTURA. Esta quantidade de reservas é baseada na contagem de reservas com status Abertos e Pendentes', verbose_name='Limitar Abertura de Reserva')),
                ('enviar_notificacao', models.BooleanField(default=True, help_text='Habilita o envio de e-mail quando as reservas são criadas, aprovadas ou canceladas', verbose_name='Enviar notificação por e-mail')),
                ('limitar_abertura_qtde', models.PositiveIntegerField(default=1, help_text='Definie a quantidade máxima de reservas Abertas e/ou Pendentes solicitados por um mesmo usuário. Requer campo LIMITAR ABERTURA DE RESERVA. Esta quantidade de reservas é baseada na contagem de reservas com status Abertos e Pendentes', verbose_name='Quantidade Limite de abertura')),
                ('migracao_id', models.IntegerField(default=0, null=True, verbose_name='ID Sala migração Serviços')),
            ],
            options={
                'verbose_name': 'Espaço',
                'verbose_name_plural': 'Espaços',
                'ordering': ('descricao',),
                'permissions': (('can_gerenciar_espaco', 'Pode gerenciar espaços'),),
            },
        ),
        migrations.CreateModel(
            name='Finalidade',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='alterado em')),
                ('descricao', models.CharField(error_messages={'unique': 'Já existe uma finalidade cadastrada com a descrição informada!'}, max_length=200, null=True, unique=True, verbose_name='Finalidade')),
                ('migracao_id', models.IntegerField(default=0, null=True, verbose_name='ID Finalidade migração Serviços')),
            ],
            options={
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='LogAgenda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log', models.TextField(null=True)),
                ('log_at', models.DateTimeField(null=True, verbose_name='Registro do log')),
                ('log_type', models.CharField(choices=[('DEBUG', 'Debug'), ('VIEW', 'Visualização'), ('ERROR', 'Error')], default='VIEW', max_length=100, null=True)),
                ('log_app', models.CharField(choices=[('BASE', 'Base'), ('AGENDALABS', 'AgendaLabs'), ('COFRE', 'Cofre'), ('NOTIFICATIONS', 'Notificações'), ('RECURSOS_ATIVOS', 'Recursos'), ('REPO_BI', 'Repositórios BI'), ('USERS', 'Usuários')], default='BASE', max_length=100, null=True)),
                ('log_action', models.CharField(choices=[('CREATE', 'Adicionar'), ('UPDATE', 'Atualizar'), ('DELETE', 'Remover'), ('VIEW', 'Visualizar')], default='VIEW', max_length=100, null=True)),
                ('log_model', models.CharField(default='LogAgenda', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Regra',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='alterado em')),
                ('week_day', models.PositiveIntegerField(choices=[(0, 'Segunda-feira'), (1, 'Terça-feira'), (2, 'Quarta-feira'), (3, 'Quinta-feira'), (4, 'Sexta-feira'), (5, 'Sábado'), (6, 'Domingo')], null=True, verbose_name='Dia da Semana')),
                ('start_time', models.TimeField(null=True, verbose_name='Horário inicial')),
                ('end_time', models.TimeField(null=True, verbose_name='Horário final')),
            ],
            options={
                'ordering': ('week_day',),
            },
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='alterado em')),
                ('responsavel', models.CharField(max_length=250, null=True, verbose_name='Responsável')),
                ('date', models.DateField(null=True, verbose_name='Data')),
                ('start', models.TimeField(null=True, verbose_name='Início')),
                ('end', models.TimeField(null=True, verbose_name='Fim')),
                ('titulo', models.CharField(blank=True, max_length=250, null=True, verbose_name='Título da agenda')),
                ('participantes', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Qtde pessoas')),
                ('status_reserva', models.CharField(choices=[('OPENED', 'Aberto'), ('PENDING', 'Pendente'), ('CANCELLED', 'Cancelado')], default='OPENED', max_length=50, verbose_name='Status')),
                ('status_descricao', models.TextField(blank=True, null=True, verbose_name='Ressalva de status')),
                ('observacao', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('migracao_id', models.IntegerField(default=0, null=True, verbose_name='ID Agenda migração Serviços')),
            ],
            options={
                'verbose_name': 'Reserva',
                'verbose_name_plural': 'Reservas',
                'permissions': (('can_acessar_agendalabs', 'Pode acessar AgendaLabs'), ('can_aprovar_reserva', 'Pode aprovar uma reserva'), ('can_cancelar_reserva', 'Pode cancelar uma reserva')),
            },
        ),
        migrations.CreateModel(
            name='TipoEspaco',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='alterado em')),
                ('descricao', models.CharField(error_messages={'unique': 'Já existe um tipo de espaço com a descrição informada!'}, max_length=200, null=True, unique=True, verbose_name='Tipo')),
                ('migracao_id', models.IntegerField(default=0, null=True, verbose_name='ID Tipo Sala migração Serviços')),
            ],
            options={
                'verbose_name': 'Tipo de Espaço',
                'verbose_name_plural': 'Tipos de Espaços',
                'ordering': ('descricao',),
            },
        ),
    ]
